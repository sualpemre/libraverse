
version: "3.8"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    depends_on:
      - elasticsearch
    networks:
      - esnet

  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    volumes:
      - jenkins_data:/var/jenkins_home

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  libraverse.accountservice.database:
    image: postgres:latest
    container_name: libraverse.accountservice.database
    restart: always
    volumes:
      - accountservice_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready --username=postgres && psql --username=postgres --list"
      timeout: 10s
      retries: 20
    networks:
      - servicenet

  libraverse.libraryservice.database:
    image: mysql
    volumes:
      - libraryservice_data:/var/lib/mysql
    networks:
      - servicenet

  libraverse.configserver:
    build:
      context: ../../config-server/
      dockerfile: Dockerfile
    networks:
      - servicenet

  libraverse.servicediscovery:
    build:
      context: ../../service-discovery/
      dockerfile: Dockerfile
    depends_on:
      - libraverse.configserver
    networks:
      - servicenet

  libraverse.accountservice:
    build:
      context: ../../account-service/
      dockerfile: Dockerfile
    depends_on:
      - libraverse.configserver
      - libraverse.servicediscovery
      - libraverse.accountservice.database
    networks:
      - servicenet

  libraverse.apigateway:
    build:
      context: ../../api-gateway/
      dockerfile: Dockerfile
    depends_on:
      - libraverse.configserver
      - libraverse.servicediscovery
      - libraverse.accountservice
    networks:
      - servicenet
volumes:
  accountservice_data:
  libraryservice_data:
  jenkins_data:
  prometheus_data:
  grafana_data:
  esdata1:
    driver: local

networks:
  esnet:
    driver: bridge
  servicenet:
    driver: bridge